class Umamusume(val name: String, var inputName : String) {

    fun judge(){
            println(name)
            println("芝")
            println(data[1])
            println("ダート")
            println(data[2])
            println("短距離")
            println(data[3])
            println("マイル")
            println(data[4])
            println("中距離")
            println(data[5])
            println("長距離")
            println(data[6])
            println("逃げ")
            println(data[7])
            println("先行")
            println(data[8])
            println("差し")
            println(data[9])
            println("追込")
            println(data[10])


    }
}

fun main() {
    val supeData = arrayListOf("A", "G", "F", "C", "A", "A", "G", "A", "A", "C")
    val maruData = arrayListOf("A", "D", "B", "A", "B", "C", "A", "E", "G", "G")
    val gorusiData = arrayListOf("A", "G", "G", "C", "A", "A", "G", "B", "B", "A")
    val umalist = arrayOf("supe", "maru", "gorusi")
    println("ウマ娘の名前入力してください")
    var inputName = readLine()
    if (umalist[0] == inputName) {
        println("芝")
        println(supeData[0])
        println("ダート")
        println(supeData[1])
        println("短距離")
        println(supeData[2])
        println("マイル")
        println(supeData[3])
        println("中距離")
        println(supeData[4])
        println("長距離")
        println(supeData[5])
        println("逃げ")
        println(supeData[6])
        println("先行")
        println(supeData[7])
        println("差し")
        println(supeData[8])
        println("追込")
        println(supeData[9])
    } else if (umalist[1] == inputName) {
        println("芝")
        println(maruData[0])
        println("ダート")
        println(maruData[1])
        println("短距離")
        println(maruData[2])
        println("マイル")
        println(maruData[3])
        println("中距離")
        println(maruData[4])
        println("長距離")
        println(maruData[5])
        println("逃げ")
        println(maruData[6])
        println("先行")
        println(maruData[7])
        println("差し")
        println(maruData[8])
        println("追込")
        println(maruData[9])
    } else if (umalist[2]==inputName) {
        println("芝")
        println(gorusiData[0])
        println("ダート")
        println(gorusiData[1])
        println("短距離")
        println(gorusiData[2])
        println("マイル")
        println(gorusiData[3])
        println("中距離")
        println(gorusiData[4])
        println("長距離")
        println(gorusiData[5])
        println("逃げ")
        println(gorusiData[6])
        println("先行")
        println(gorusiData[7])
        println("差し")
        println(gorusiData[8])
        println("追込")
        println(gorusiData[9])
    } else {
        println("notウマ娘")
    }
}
    var a001=Umamusume("supe","inputName")
    var data = arrayOf("A","G","F","C","A","A","G","A","A","C")
fun judge(data:String){
    println("芝")
    println(data[1])
    println("ダート")
    println(data[2])
    println("短距離")
    println(data[3])
    println("マイル")
    println(data[4])
    println("中距離")
    println(data[5])
    println("長距離")
    println(data[6])
    println("逃げ")
    println(data[7])
    println("先行")
    println(data[8])
    println("差し")
    println(data[9])
    println("追込")
    println(data[10])


}
